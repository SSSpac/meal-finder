@import '/src/App.scss';

@mixin respond-to($breakpoint) {
  @if $breakpoint == 'small' {
    @media (max-width: 480px) { @content; }
  } @else if $breakpoint == 'medium' {
    @media (max-width: 768px) { @content; }
  } @else if $breakpoint == 'large' {
    @media (min-width: 1200px) { @content; }
  }
}

.mealCard {
  @include card-style;
  max-width: 800px;
  margin: 0 auto $spacing-unit * 2;
  
  @include respond-to('medium') {
    padding: $spacing-unit;
  }
}

.mealHeader {
  text-align: center;
  margin-bottom: $spacing-unit * 1.5;
  
  h2 {
    color: $secondary-color;
    margin-bottom: $spacing-unit * 0.5;
    font-size: calculate-font-size(1rem, 1.8);
    
    @extend %text-truncate;
    max-width: 100%;
  }
}

.mealMeta {
  @include flex-center;
  gap: $spacing-unit;
  color: lighten($dark-color, 30%);
  font-style: italic;
  flex-wrap: wrap;
  
  span {
    @include respond-to('small') {
      font-size: 0.8rem;
    }
  }
}

.mealContent {
  display: flex;
  gap: $spacing-unit * 2;
  margin-bottom: $spacing-unit * 2;
  
  @include respond-to('medium') {
    flex-direction: column;
    gap: $spacing-unit;
  }
}

.mealImage {
  flex: 1;
  min-width: 0;
  
  img {
    width: 100%;
    border-radius: $border-radius;
    box-shadow: $box-shadow;
    transition: transform 0.3s ease;
    
    &:hover {
      transform: scale(1.02);
    }
  }
}

.mealDetails {
  flex: 1;
  
  h3 {
    color: $secondary-color;
    padding-bottom: $spacing-unit * 0.5;
    margin-bottom: $spacing-unit;
  }
  
  ul {
    list-style-type: none;
    padding: 0;
    columns: 2;
    
    @include respond-to('small') {
      columns: 1;
    }
    
    li {
      padding: $spacing-unit * 0.3 0;
      break-inside: avoid;
    }
  }
}

.mealInstructions {
  margin-bottom: $spacing-unit * 1.5;
  
  h3 {
    color: $secondary-color;
    border-bottom: 2px solid $main-color;
    padding-bottom: $spacing-unit * 0.5;
    margin-bottom: $spacing-unit;
  }
  
  p {
    line-height: 1.6;
    white-space: pre-line;
  }
}

.mealVideo {
  text-align: center;
  margin-bottom: $spacing-unit * 1.5;
  
  a {
    @include button-style($error-color, darken($error-color, 10%));
    text-decoration: none;
  }
}

.refreshButton {
  @include button-style;
  width: 100%;
  padding: $spacing-unit;
  font-size: calculate-font-size(1rem, 1.1);
}

// Generate utility classes for spacing
@for $i from 1 through 5 {
  .mb-#{$i} {
    margin-bottom: $spacing-unit * $i;
  }
  
  .mt-#{$i} {
    margin-top: $spacing-unit * $i;
  }
}